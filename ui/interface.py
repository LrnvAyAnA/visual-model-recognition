import gradio as gr
from core.process import process_image
from core.utils import validate_and_fix_weights

# UI —Ñ—É–Ω–∫—Ü–∏—è: —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –≤–µ—Å–æ–≤
def process_and_update_table(image):
    image_with_boxes, result_text, headers, table_data = process_image(image, return_weights_table=True)

    # –°–±—Ä–æ—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    return (
        image_with_boxes,
        result_text,
        gr.update(headers=headers, value=table_data),
        ""
    )


# UI —Ñ—É–Ω–∫—Ü–∏—è: –ø–µ—Ä–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Å —Ä—É—á–Ω—ã–º–∏ –≤–µ—Å–∞–º–∏
def process_with_weights(image, weight_table):
    # –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∏ —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤—Ä—É—á–Ω—É—é –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –≤–µ—Å–æ–≤
    cleaned_table, had_error = validate_and_fix_weights(weight_table)

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∏ —Ä–∞—Å—á—ë—Ç
    image_with_boxes, result_text, headers, table_data = process_image(
        image, cleaned_table, return_weights_table=True
    )

    datatypes = ["str"] + ["number"] * (len(headers) - 1)

    return (
        image_with_boxes,
        result_text,
        gr.update(
            headers=headers,
            value=table_data,
            datatype=datatypes,
            col_count=(len(headers), "fixed"),
            row_count=(len(table_data), "fixed")
        ),
        "‚ö†Ô∏è –ó–Ω–∞—á–µ–Ω–∏–µ –≤–Ω–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ [0, 1] ‚Äî –±—É–¥–µ—Ç –æ–±—Ä–µ–∑–∞–Ω–æ." if had_error else ""
    )


with gr.Blocks() as interface:
    # –û –°–ò–°–¢–ï–ú–ï
    with gr.Row():
        with gr.Column(scale=4):
            pass
        with gr.Column(scale=1):
            info_button = gr.Button("–û —Å–∏—Å—Ç–µ–º–µ")
        info_state = gr.State(False)

    info_box = gr.Markdown(visible=False)


    def toggle_info(is_visible):
        if is_visible:
            return gr.update(visible=False), False
        else:
            return gr.update(visible=True, value="""
    ### –ß—Ç–æ –¥–µ–ª–∞–µ—Ç —Å–∏—Å—Ç–µ–º–∞
    –≠—Ç–æ –ø—Ä–æ—Ç–æ—Ç–∏–ø —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞—Å–ø–æ–∑–Ω–∞—ë—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤–∏–∑—É–∞–ª—å–Ω–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –±–∞–∑–æ–≤—ã–µ —Ç–∏–ø—ã –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–π.
    ---
    ### –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è
    1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∏–∞–≥—Ä–∞–º–º—ã.
    2. –°–∏—Å—Ç–µ–º–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞—ë—Ç –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã.
    3. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —Å–ø–∏—Å–æ–∫ –Ω–∞–∏–±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω—ã—Ö —Ç–∏–ø–æ–≤ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–π.
    4. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ ‚Äî –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç–µ –≤–µ—Å–∞ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –≤—Ä—É—á–Ω—É—é.
    """), True


    info_button.click(fn=toggle_info, inputs=info_state, outputs=[info_box, info_state])

    with gr.Row():
        image_input = gr.Image(type="numpy", label="–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∏–∞–≥—Ä–∞–º–º—ã")
        image_output = gr.Image(type="numpy", label="–†–µ–∑—É–ª—å—Ç–∞—Ç —Å —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏", width=300)

    with gr.Row():
        result_box = gr.Textbox(label="–¢–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç", lines=12)
        notification_box = gr.Textbox(label="–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ", interactive=False)

    gr.Markdown("### –†—É—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ—Å–æ–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤")

    weight_table = gr.Dataframe(
        headers=["–≠–ª–µ–º–µ–Ω—Ç"],
        datatype=["str"],
        value=[],
        interactive=True,
        row_count=(1, "dynamic"),
        label="–¢–∞–±–ª–∏—Ü–∞ –≤–µ—Å–æ–≤",
        type="pandas"
    )

    with gr.Row():
        update_button = gr.Button("–ü–µ—Ä–µ—Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Å –Ω–æ–≤—ã–º–∏ –≤–µ—Å–∞–º–∏")
        reset_button = gr.Button("–°–±—Ä–æ—Å–∏—Ç—å –≤–µ—Å–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")

    # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    image_input.change(
        fn=process_and_update_table,
        inputs=image_input,
        outputs=[image_output, result_box, weight_table, notification_box]
    )



    # –ü–µ—Ä–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ
    update_button.click(
        fn=process_with_weights,
        inputs=[image_input, weight_table],
        outputs=[image_output, result_box, weight_table, notification_box]
    )

    # –°–±—Ä–æ—Å –≤–µ—Å–æ–≤
    reset_button.click(
        fn=process_and_update_table,
        inputs=image_input,
        outputs=[image_output, result_box, weight_table, notification_box]
    )


    # def show_info():
    #     return gr.update(value="""
    # ### üß© **–ß—Ç–æ –¥–µ–ª–∞–µ—Ç —Å–∏—Å—Ç–µ–º–∞**
    # –≠—Ç–æ –ø—Ä–æ—Ç–æ—Ç–∏–ø —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞—Å–ø–æ–∑–Ω–∞—ë—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤–∏–∑—É–∞–ª—å–Ω–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –±–∞–∑–æ–≤—ã–µ —Ç–∏–ø—ã –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–Ω—Ç–æ–ª–æ–≥–∏–∏.
    #
    # ---
    #
    # ### üìã **–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è**
    # 1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∏–∞–≥—Ä–∞–º–º—ã (–º–æ–∂–Ω–æ –ø–µ—Ä–µ—Ç—è–Ω—É—Ç—å –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –≤—Ä—É—á–Ω—É—é).
    # 2. –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã (–ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∏, –ø–æ–¥–ø–∏—Å–∏, –∫—Ä—É–≥–∏ –∏ —Ç.–ø.).
    # 3. –û—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —Ç–∏–ø—É –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Å—Ç–µ–ø–µ–Ω–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è.
    # 4. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –≤—Ä—É—á–Ω—É—é –∏–∑–º–µ–Ω–∏—Ç—å –≤–µ—Å–∞ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤, —á—Ç–æ–±—ã —É—Ç–æ—á–Ω–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.
    # """, visible=True)
    #
    #
    # info_button.click(fn=show_info, outputs=info_output)

if __name__ == "__main__":
    interface.launch()